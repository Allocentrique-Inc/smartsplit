swagger: '2.0'
host: api.smartsplit.org
basePath: /v1
schemes:
  - https
info:
  title: Smartsplit API
  description: Provides a RESTful API for interacting with Smartsplit 
  version: v1
  x-origin:
    - format: yaml
      url: 'https://raw.githubusercontent.com/iptoki/smartsplit/develop/api/swagger.yaml'
  x-providerName: smartsplit.org
  x-logo:
    url: http://smartsplit.org/wp-content/uploads/2019/05/Logo-v02-005-noir.png
consumes:
  - application/json
produces: 
  - application/json
securityDefinitions:
  basicAuth:
    description: HTTP Basic Authentication
    type: basic
  jwt:
    description: A JSON Web Token (JWT) used for access control and authorization
    in: header
    name: Authorization
    type: apiKey
security:
  - jwt: []
tags:
  - description: Obtaining and refreshing your JWT token
    name: Authentication
  - description: Viewing and creating right holder profiles
    name: Profiles
  - description: Viewing and creating media
    name: Media
  - description: Viewing and updating payment details
    name: Payments
paths:
  /auth:
    post:
      description: Get a session JWT token to be included in the rest of the requests 
      parameters:
        - description: JSON string containing your authentication details.
          in: body
          name: Authentication string
          required: true
          schema:
            $ref: '#/definitions/auth'
      responses:
        '200':
          description: OK. JWT returned for use with the rest of the API requests
          schema:
            $ref: '#/definitions/authResult'
        '401':
          description: Invalid credentials and/or API token 
      tags:
        - Authentication
  /refresh_token:
    get:
      description: Refreshes your current, valid JWT token and returns a new token.
      responses:
        '200':
          description: OK. JWT returned to use in your subsequent requests
          schema:
            $ref: '#/definitions/authResult'
        '401':
          description: Returned if your JWT token is missing or expired
      security:
        - jwt: []
      tags:
        - Authentication
  /profiles:
    get:
      description: Get a list of all right holder profiles
      responses: 
        '200':
          description: OK
          schema:
            $ref: '#/definitions/profiles'
      tags: 
        - Profiles
    post:
      description: This method creates a new profile
      parameters:
      - description: |-
          Full name associated with the profile. Maximum of 20 characters.

          Example Values: John Smith
        in: query
        name: name
        required: true
        type: string
      - description: |-
          Email associated with the profile. 

          Example Values: john.smith@example.com
        in: query
        name: email
        required: true
        type: string
      - description: |-
          The role of the right holder.

          Example Values: Writer
        in: query
        name: role
        required: true
        type: string
      - description: |-
          The right holder's interested party information number
          
          Example Values: 00004576
        in: query
        name: ipi
        required: false
        type: string
      - description: |-
          the media id of the profile
          
          Example Values: 2
        in: query
        name: id
        required: false
        type: integer
      - description: |-
          The wallet address of the right holder

          Example Values: 0xdd87ae15f4be97e2739c9069ddef674f907d27a8
        in: query
        name: wallet
        required: false
        type: string
      responses:
        '200':
          description: OK. The profile was created.
          schema:
            $ref: '#/definitions/profile'
        '400':
          description: A parameter is invalid
        '403':
          description: The authenticated user can't create a profile
      security:
        - jwt: []
      tags:
        - Profiles
  '/profiles/{id}':
    get:
      description: Get a right holder's profile with the given ID
      parameters:
        - description: The rights holder's unique profile ID
          in: path
          name: id
          required: true
          type: integer
      responses: 
        '200':
          description: OK
          schema: 
            $ref: '#/definitions/profile'
      tags: 
        - Profiles
    delete:
      description: Delete a right holder's profile with the given ID
      parameters:
        - description: The rights holder's unique profile ID
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK. Profile deleted.
      security:
        - jwt: []
      tags: 
        - Profiles
  '/profiles/{id}/name':
    get:
      description: Get a right holder's full name with the given ID
      parameters:
        - description: The rights holder's unique profile ID
          in: path
          name: id
          required: true
          type: integer
      responses: 
        '200':
          description: OK
          schema: 
            properties:
              name: 
                description: The right holder's full name
                type: string
                example: 'John Smith'
      tags: 
        - Profiles
    put:
      description: Update right holder's full name with the given ID
      parameters:
        - description: The rights holder's unique profile ID
          in: path
          name: id
          required: true
          type: integer
        - description: The rights holder's full name
          in: path
          name: name
          required: true
          type: string
      responses: 
        '200':
          description: OK
          schema: 
            properties:
              name: 
                description: The right holder's full name
                type: string
                example: 'Bob Andrews'
      tags: 
        - Profiles
  '/profiles/{id}/email':
    get:
      description: Get a right holder's email address with given ID
      parameters:
        - description: The right holder's unique profile ID
          in: path
          name: id
          required: true
          type: integer
      responses: 
        '200':
          description: OK
          schema: 
            properties:
              email: 
                description: The right holder's email address
                type: string
                example: 'john.smith@example.com'
      security:
        - jwt: []
      tags: 
        - Profiles
    put:
      description: Update right holder's email address with given ID
      parameters:
        - description: The right holder's unique profile ID
          in: path
          name: id
          required: true
          type: integer
        - description: The rights holder's email address
          in: path
          name: email
          required: true
          type: string
      responses: 
        '200':
          description: OK
          schema: 
            properties:
              email: 
                description: The right holder's email address
                type: string
                example: 'bob.andrews@example.com'
      security:
        - jwt: []
      tags: 
        - Profiles
  '/profiles/{id}/role':
    get:
      description: Get a right holder's role with the given ID       (Or list of roles including copyright, performance, and/or recording)
      parameters:
        - description: The right holder's unique profile ID
          in: path
          name: id
          required: true
          type: integer
      responses: 
        '200':
          description: OK
          schema: 
            properties:
              role: 
                description: The right holder's role
                type: string
                example: 'writer'
      tags: 
        - Profiles
    put:
      description: Update right holder's role with the given ID       (Or list of roles including copyright, performance, and/or recording)
      parameters:
        - description: The right holder's unique profile ID
          in: path
          name: id
          required: true
          type: integer
        - description: The right holder's role
          in: path
          name: role
          required: true
          type: string
      responses: 
        '200':
          description: OK
          schema: 
            properties:
              role: 
                description: The right holder's role
                type: string
                example: 'writer'
      tags: 
        - Profiles
  '/profiles/{id}/ipi':
    get:
      description: Get right holder's interested party information "#"
      parameters:
        - description: The right holder's unique profile ID
          in: path
          name: id
          required: true
          type: integer
      responses: 
        '200':
          description: OK
          schema: 
            properties:
              ipi: 
                description: The right holder's interested party information number
                type: string
                example: '00004576'
      tags: 
        - Profiles
    put:
      description: Update right holder's IPI number
      parameters:
        - description: The right holder's unique profile ID
          in: path
          name: id
          required: true
          type: integer
        - description: The right holder's IPI number
          in: path
          name: ipi
          required: true
          type: string
      responses: 
        '200':
          description: OK
          schema: 
            properties:
              ipi: 
                description: The right holder's interested party information number
                type: string
                example: '00004576'
      tags: 
        - Profiles
  '/profiles/{id}/media':
    get:
      description: Get list of media for the given right holder 
      parameters:
        - description: The right holder's unique profile ID
          in: path
          name: id
          required: true
          type: integer
      responses: 
        '200':
          description: OK
          schema: 
            $ref: '#/definitions/medias'
      tags: 
        - Profiles
    put:
      description: Update list of media for the given right holder 
      parameters:
        - description: The right holder's unique profile ID
          in: path
          name: id
          required: true
          type: integer
        - description: The unique ID of the given media
          in: path
          name: mediaId
          required: true
          type: integer
      responses: 
        '200':
          description: OK
          schema: 
            $ref: '#/definitions/medias'
      tags: 
        - Profiles
  '/profiles/{id}/wallet':
    get:
      description: Get the wallet address of a right holder
      parameters:
        - description: The right holder's unique profile ID
          in: path
          name: id
          required: true
          type: integer
      responses: 
        '200':
          description: OK
          schema: 
            properties:
              wallet: 
                description: The user's wallet address
                type: string
                example: '0xdd87ae15f4be97e2739c9069ddef674f907d27a8'
      tags: 
        - Profiles
    put:
      description: Update the wallet address of a right holder
      parameters:
        - description: The right holder's unique profile ID
          in: path
          name: id
          required: true
          type: integer
        - description: The right holder's wallet address
          in: path
          name: wallet
          required: true
          type: string
      responses: 
        '200':
          description: OK
          schema: 
            properties:
              wallet: 
                description: The user's wallet address
                type: string
                example: '0xdd87ae15f4be97e2739c9069ddef674f907d27a9'
      tags: 
        - Profiles
  /media:
    get:
      description: Get a list of all media
      responses: 
        '200':
          description: OK
          schema:
            $ref: '#/definitions/medias'
      tags: 
        - Media
    post:
      description: This method creates a new media item
      parameters:
      - description: |-
          Title of the media.

          Example Values: Love You Baby
        in: query
        name: title
        required: true
        type: string
      - description: |-
          The Description of the piece of media

          Example Values: The wonderful classic hit song, Love You Baby
        in: query
        name: description
        required: true
        type: string
      # - description: |-
      #     The list of right holders who collaborated on the given media.

      #     Example Values: [{writer: John Smith, Producer: Bob Andrews}]
      #   in: query
      #   name: right-holders
      #   required: false
      #   type: array
      #   items:
      #     type: string
      #     enum: [ "John Smith", "Bob Andrews"]
      - description: |-
          The jurisdiction of the given media.
          
          Example Values: SOCAN
        in: query
        name: jurisdiction
        required: false
        type: string
      - description: |-
          The type of rights of the given media (copyright, performance, recording).
          
          Example Values: Example Values: [{copyright, recording}]
        in: query
        name: rights-type
        required: false
        type: array
        items:
          type: string
          enum: [ "copyright", "performance", "recording" ]
      - description: |-
          The genre of the given media

          Example Values: Rock
        in: query
        name: genre
        required: false
        type: string
      - description: |-
          The creation date of the given media.

          Example Values: '2019-01-01T15:53:00'
        in: query
        name: creation-date
        required: false
        type: string
      - description: |-
          The publisher of the given media.

          Example Values: sync publishing
        in: query
        name: publisher
        required: false
        type: string
      # - description: |-
      #     The right holders' percentage split on the given media

      #     Example Values: [{John Smith: 20, Bob Andrews: 80}]
      #   in: query
      #   name: split
      #   required: false
      #   type: array
      #   items: 
      #     type: number
      #     enum: [20, 80]
      responses:
        '200':
          description: OK. The media was created.
          schema: 
            $ref: '#/definitions/media'
        '400':
          description: A parameter is invalid
        '403':
          description: Cannot create a media iten
      security:
        - jwt: []
      tags:
        - Media
  '/media/{mediaId}':
    get:
      description:  Get media with the given ID
      parameters:
        - description: The artwork agreement's unique ID
          in: path
          name: mediaId
          required: true
          type: integer
      responses: 
        '200':
          description: OK
          schema: 
            $ref: '#/definitions/media'
      tags: 
        - Media
    delete:
      description: Delete a right holder's profile with the given ID
      parameters:
        - description: The rights holder's unique profile ID
          in: path
          name: mediaId
          required: true
          type: integer
      responses:
        '200':
          description: OK
      security:
        - jwt: []
      tags: 
        - Media
  '/media/{mediaId}/title':
    get:
      description: Get the title of the given media identified by ID
      parameters:
        - description: The artwork agreement's unique ID
          in: path
          name: mediaId
          required: true
          type: integer
      responses: 
        '200':
          description: OK
          schema: 
            properties:
              title: 
                description: The title of the given artwork
                type: string
                example: 'Love You Baby'
      tags: 
        - Media
    put:
      description: Get the title of the given media identified by ID
      parameters:
        - description: The artwork agreement's unique ID
          in: path
          name: mediaId
          required: true
          type: integer
        - description: The title of the artwork
          in: path
          name: title
          required: true
          type: string
      responses: 
        '200':
          description: OK
          schema: 
            properties:
              title: 
                description: The title of the given artwork
                type: string
                example: 'Love You Honey'
      tags: 
        - Media
  '/media/{mediaId}/description':
    get:
      description: Get the description of a piece of media
      parameters:
        - description: The artwork agreement's unique ID
          in: path
          name: mediaId
          required: true
          type: integer
      responses: 
        '200':
          description: OK
          schema: 
            properties:
              description: 
                description: The description of the artwork
                type: string
                example: 'The wonderful classic hit song, Love You Baby'
      tags: 
        - Media
    put:
      description: Get the description of a piece of media
      parameters:
        - description: The artwork agreement's unique ID
          in: path
          name: mediaId
          required: true
          type: integer
        - description: The description of the artwork
          in: path
          name: description
          required: true
          type: string
      responses: 
        '200':
          description: OK
          schema: 
            properties:
              description: 
                description: The description of the artwork
                type: string
                example: 'The wonderful classic hit song, Love You Honey'
      tags: 
        - Media
  '/media/{mediaId}/right-holders':
    get:
      description: Get the right holders who collaborated on media
      parameters:
        - description: The artwork agreement's unique ID
          in: path
          name: mediaId
          required: true
          type: integer
      responses: 
        '200':
          description: OK
          schema: 
            properties:
              right-holders:
                additionalProperties:
                  description: The type of right holder, for example, writer, producer
                  type: string
                description: The full name of the right holder
                type: object
      tags: 
        - Media
    # put:
    #   description: Update right holders who collaborated on media
    #   parameters:
    #     - description: The artwork agreement's unique ID
    #       in: path
    #       name: mediaId
    #       required: true
    #       type: integer
    #     - description: The list of right holders
    #       in: path
    #       name: right-holders
    #       required: true
    #       type: array
    #       items:
    #         type: string
    #         enum: [ "John Smith", "Bob Andrews"]
    #   responses: 
    #     '200':
    #       description: OK
    #       schema: 
    #         properties:
    #           right-holders:
    #             additionalProperties:
    #               description: The type of right holder, for example, writer, producer
    #               type: string
    #             description: The full name of the right holder
    #             type: object
    #   tags: 
    #     - Media
  '/media/{mediaId}/jurisdiction':
    get:
      description: Get the jurisdiction of the given media
      parameters:
        - description: The artwork agreement's unique ID
          in: path
          name: mediaId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            properties:
              jurisdiction:
                description: The jusrisdiction of the artwork agreement of the given media
                type: string
                example: 'SOCAN'
      tags: 
        - Media
    put:
      description: Update the jurisdiction of the given media
      parameters:
        - description: The artwork agreement's unique ID
          in: path
          name: mediaId
          required: true
          type: integer
        - description: The jurisdiction of the given media
          in: path
          name: jurisdiction
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            properties:
              jurisdiction:
                description: The jusrisdiction of the artwork agreement of the given media
                type: string
                example: 'SOPROQ'
      tags: 
        - Media
  '/media/{mediaId}/rights-type':
    get:
      description: Get the type of rights of the given media         (Including copyright, performance, recording)
      parameters:
        - description: The artwork agreement's unique ID
          in: path
          name: mediaId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            properties:
              rights-type:
                description: The type of rights associated with the artwork
                type: object
                example: {copyright: true, performance: true, recording: false}
      tags: 
        - Media
    # put:
    #   description: Update the type of rights of the given media      (Including copyright, performance, recording)
    #   parameters:
    #     - description: The artwork agreement's unique ID
    #       in: path
    #       name: mediaId
    #       required: true
    #       type: integer
    #     - description: The type of rights of the given media
    #       in: path
    #       name: mediaId
    #       required: true
    #       type: array
    #       items:
    #         type: string
    #         enum: [ "copyright", "performance", "recording" ]
    #   responses:
    #     '200':
    #       description: OK
    #       schema:
    #         properties:
    #           rights-type:
    #             description: The type of rights associated with the artwork
    #             type: object
    #             example: {copyright: true, performance: false, recording: false}
    #   tags: 
    #     - Media
  '/media/{mediaId}/genre':
    get:
      description: Get the genre of the media with the given ID
      parameters:
        - description: The artwork agreement's unique ID
          in: path
          name: mediaId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            properties:
              genre:
                description: The genre of the given media.
                type: string
                example: 'Rock'
      tags: 
        - Media
    put:
      description: Update the genre of the media with the given ID
      parameters:
        - description: The artwork agreement's unique ID
          in: path
          name: mediaId
          required: true
          type: integer
        - description: The genre of the artwork
          in: path
          name: genre
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            properties:
              genre:
                description: The genre of the given media.
                type: string
                example: 'Pop'
      tags: 
        - Media
  '/media/{mediaId}/creation-date':
    get:
      description: Get creation date of the media with the given ID
      parameters:
        - description: The artwork agreement's unique ID
          in: path
          name: mediaId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            properties:
              creation-date:
                description: The creation date of the smartsplit contract for the given media
                type: string
                format: iso8601-date-time
                example: '2019-01-01T15:53:00'
      tags: 
        - Media
  '/media/{mediaId}/publisher':
    get:
      description: Get publisher name of the media with the given ID
      parameters:
        - description: The artwork agreement's unique ID
          in: path
          name: mediaId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            properties:
              publisher:
                description: The publisher name of the media with the given ID
                type: string
                example: 'sync publishing'
      tags: 
        - Media
    put:
      description: Update publisher of the media with the given ID
      parameters:
        - description: The artwork agreement's unique ID
          in: path
          name: mediaId
          required: true
          type: integer
        - description: The publisher of the media
          in: path
          name: publisher
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            properties:
              publisher:
                description: The publisher name of the media with the given ID
                type: string
                example: 'tune publishing'
      tags: 
        - Media
  '/media/{mediaId}/split':
    get:
      description: Get rights holders' percentage split given media
      parameters:
        - description: The artwork agreement's unique ID
          in: path
          name: mediaId
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            properties:
              split: 
                additionalProperties: 
                  description: The names of the right holders for the given media
                  type: number
                description: The percentage split of each right holder
                type: object
      security:
        - jwt: []
      tags: 
        - Media
    # put:
    #   description: Update rights holders' percentage split on media
    #   parameters:
    #     - description: The artwork agreement's unique ID
    #       in: path
    #       name: mediaId
    #       required: true
    #       type: integer
    #     - description: The percentage split for the right holders of the media
    #       in: path
    #       name: mediaId
    #       required: true
    #       type: array
    #       items:
    #         type: number
    #         enum: [20,80]
    #   responses:
    #     '200':
    #       description: OK
    #       schema:
    #         properties:
    #           split: 
    #             additionalProperties: 
    #               description: The names of the right holders for the given media
    #               type: number
    #             description: The percentage split of each right holder
    #             type: object
    #   security:
    #     - jwt: []
    #   tags: 
    #     - Media
  /payments:
    get:
      description: Get a list of all payments' details
      responses: 
        '200':
          description: OK
          schema:
            $ref: '#/definitions/payments'
      tags: 
        - Payments
  '/payments/{id}':
    get:
      description: Get the details of a payment with the given ID
      parameters:
        - description: The payment's unique ID
          in: path
          name: id
          required: true
          type: integer
      responses: 
        '200':
          description: OK
          schema: 
            $ref: '#/definitions/payment'
      tags: 
        - Payments
    delete:
      description: Delete a right holder's profile with the given ID
      parameters:
        - description: The rights holder's unique profile ID
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
      security:
        - jwt: []
      tags: 
        - Payments
  '/payments/{id}/transaction-id':
    get:
      description: Get management societies' payment transaction ID
      parameters:
        - description: The payment's unique ID
          in: path
          name: id
          required: true
          type: integer
      responses: 
        '200':
          description: OK
          schema: 
            properties:
              transaction-id: 
                description: The management societies' transaction ID
                type: string
                example: '124235678'
      tags: 
        - Payments
    put:
      description: Get management societies' payment transaction ID
      parameters:
        - description: The payment's unique ID
          in: path
          name: id
          required: true
          type: integer
        - description: The payment transaction ID
          in: path
          name: transaction-id
          required: true
          type: string
      responses: 
        '200':
          description: OK
          schema: 
            properties:
              transaction-id: 
                description: The management societies' transaction ID
                type: string
                example: '87654321'
      security:
        - jwt: []
      tags: 
        - Payments
  '/payments/{id}/transaction-hash':
    get:
      description: Get blockchain transaction hash of a payment
      parameters:
        - description: The payment's unique ID
          in: path
          name: id
          required: true
          type: integer
      responses: 
        '200':
          description: OK
          schema: 
            properties:
              transaction-hash: 
                description: The transaction hash on the blockchain
                type: string
                example: '0x58a4c5ff945f8f1c0d0218466886d1e860c78cb625a2a4860e1efaf3a7c33b0c'
      tags: 
        - Payments
    put:
      description: Update blockchain transaction hash of a payment
      parameters:
        - description: The payment's unique ID
          in: path
          name: id
          required: true
          type: integer
        - description: The blockchain hash of the transaction
          in: path
          name: transaction-hash
          required: true
          type: string
      responses: 
        '200':
          description: OK
          schema: 
            properties:
              transaction-hash: 
                description: The transaction hash on the blockchain
                type: string
                example: '0x68a4c5ff945f8f1c0d0218466886d1e860c78cb625a2a4860e1efaf3a7c33b0c'
      security:
        - jwt: []
      tags: 
        - Payments
definitions:
  auth:
    properties:
      apikey:
        type: string
      username:
        type: string
      password:
        type: string
  authResult:
    properties:
      accessToken:
        description: The JWT access token for the current session
        type: string
        example: "fyJhbGciOiJIUzI1NiIsInR5cCI6IkpXUyJ9.eyJjb21wYW55IjoiRnV0dXJlRWQiLCJzdWIiOjEsImlzcyI6Imh0dHA6XC9cL2Z1dHVyZWVkLmRldlwvYXBpXC92MVwvc3R1ZGVudFwvbG9naW5cL3VzZXJuYW1lIiwiaWF0IjoiMTQyNzQyNjc3MSIsImV4cCI6IjE0Mjc0MzAzNzEiLCJuYmYiOiIxNDI3NDI2NzcxIiwianRpIjoiNmFlZDQ3MGFiOGMxYTk0MmE0MTViYTAwOTBlMTFlZTUifQ.MmM2YTUwMjEzYTE0OGNhNjk5Y2Y2MjEwZDdkN2Y1OTQ2NWVhZTdmYmI4OTA5YmM1Y2QwYTMzZjUwNTgwY2Y0MQ"
    type: object
  profiles:
    description: An array of profile information
    type: array
    items: 
      $ref: '#/definitions/profile'
  profile:
    properties:
      id:
        description: The unique right holder ID for this user profile
        type: integer
        example: 1
      name:
        description: The name displayed on the user's profile
        type: string
        example: 'John Smith'
      email:
        description: The email address for this user profile
        type: string
        example: 'john.smith@example.com'
      media:
        $ref: '#/definitions/media'
      ipi:
        description: The right holder's interested party information number
        type: string
        example: '00004576'
      role:
        description: The role of the right holder for this user profile
        type: string
        example: 'writer'
      wallet:
        description: The blockchain wallet address for this user profile
        type: string
        example: '0xdd87ae15f4be97e2739c9069ddef674f907d27a8'
    type: object
  medias:
    description: An array of pieces of media
    type: array
    items: 
      $ref: '#/definitions/media'
  media:
    properties:
      id:
        description: The unique ID for this media
        type: integer
        example: 4
      title:
        description: The title of this piece of media
        type: string
        example: 'Love You Baby'
      description:
        description: The short descriptioon of this piece of media
        type: string
        example: 'The wonderful classic hit song, Love You Baby'
      right-holders:
        additionalProperties:
          description: The type of right holder, for example, writer, producer
          type: string
        description: The full name of the right holder
        type: object
      jurisdiction:
        description: The Jurisdiction for the given media
        type: string
        example: 'SOCAN'
      rights-type:
        additionalProperties:
          description: The type of right, for example, copyright, performance, recording
          type: string
        description: The boolean, 'True' or 'False'
        type: object
      genre:
        description: The genre of the given media
        type: string
        example: 'Rock'
      creation-date:
        description: The creation date of the rights agreement for the given media
        format: iso8601-date-time
        type: string
        example: '2019-01-01T15:53:00'
      publisher:
        description: The publisher for the given media (Left blank if no publisher)
        type: string
        example: 'sync publishing'
      split: 
        additionalProperties: 
          description: The names of the right holders for the given media
          type: number
        description: The percentage split of each right holder
        type: object
  payments:
    description: An array of information about payments
    type: array
    items: 
      $ref: '#/definitions/payment'
  payment:
    properties:
      id:
        description: The unique ID for this payment
        type: integer
        example: 2
      transaction-id:
        description: The transaction string of the management company for this payment
        type: string
        example: '12345678'
      transaction-hash:
        description: The blockchain transaction hash for this payment
        type: string
        example: '0x58a4c5ff945f8f1c0d0218466886d1e860c78cb625a2a4860e1efaf3a7c33b0c'
    type: object